---
openapi: 3.0.1
info:
  title: Selena-AI API V1
  version: v1
  description: API documentation for Selena-AI
paths:
  "/account_activations":
    post:
      summary: Invites a new user
      tags:
      - Account Activations
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '200':
          description: user invited
        '401':
          description: unauthorized
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    name:
                      type: string
                    email:
                      type: string
                    title:
                      type: string
                    phone_number:
                      type: string
                    admin:
                      type: boolean
                  required:
                  - name
                  - email
                  - title
                  - phone_number
              required:
              - user
  "/account_activations/{id}":
    put:
      summary: Activates a user account
      tags:
      - Account Activations
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: user activated
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    password:
                      type: string
                    password_confirmation:
                      type: string
                    activation_token:
                      type: string
                    device_id:
                      type: string
                  required:
                  - password
                  - password_confirmation
                  - activation_token
                  - device_id
              required:
              - user
  "/login":
    post:
      summary: Authenticates user and returns JWT token
      tags:
      - Authentication
      parameters: []
      responses:
        '200':
          description: user authenticated
        '401':
          description: invalid credentials
        '422':
          description: invalid parameters
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    email:
                      type: string
                    password:
                      type: string
                    device_id:
                      type: string
                  required:
                  - email
                  - password
                  - device_id
  "/logout":
    delete:
      summary: Logs out user by destroying device token
      tags:
      - Authentication
      security:
      - bearerAuth: []
      responses:
        '200':
          description: user logged out
        '401':
          description: unauthorized
  "/companies":
    get:
      summary: Retrieves all companies
      tags:
      - Companies
      security:
      - bearerAuth: []
      responses:
        '200':
          description: companies found
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    timezone:
                      type: string
                    start_day:
                      type: string
                    created_at:
                      type: string
                      format: date_time
                    updated_at:
                      type: string
                      format: date_time
                  required:
                  - id
                  - name
                  - timezone
                  - start_day
                  - created_at
                  - updated_at
        '401':
          description: unauthorized
    post:
      summary: Creates a company
      tags:
      - Companies
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '201':
          description: company created
        '422':
          description: invalid start_day
        '401':
          description: unauthorized
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                timezone:
                  type: string
                start_day:
                  type: string
              required:
              - name
              - timezone
              - start_day
  "/companies/{id}":
    get:
      summary: Retrieves a company
      tags:
      - Companies
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: company found
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  timezone:
                    type: string
                  start_day:
                    type: string
                required:
                - id
                - name
                - timezone
                - start_day
        '404':
          description: company not found
        '401':
          description: unauthorized
    put:
      summary: Updates a company
      tags:
      - Companies
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: company updated
        '404':
          description: company not found
        '422':
          description: invalid start_day
        '401':
          description: unauthorized
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                timezone:
                  type: string
                start_day:
                  type: string
    delete:
      summary: Deletes a company
      tags:
      - Companies
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: company deleted
        '404':
          description: company not found
        '401':
          description: unauthorized
  "/companies/{id}/employees":
    get:
      summary: Retrieves employees of a company
      tags:
      - Companies
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: employees found
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    email:
                      type: string
                    first_name:
                      type: string
                    last_name:
                      type: string
                    role:
                      type: string
                  required:
                  - id
                  - email
                  - first_name
                  - last_name
                  - role
        '404':
          description: company not found
        '401':
          description: unauthorized
  "/users":
    post:
      summary: Creates a user
      tags:
      - Users
      parameters: []
      responses:
        '201':
          description: user created
        '422':
          description: password confirmation doesn't match
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    name:
                      type: string
                    email:
                      type: string
                    title:
                      type: string
                    password:
                      type: string
                    password_confirmation:
                      type: string
                    phone_number:
                      type: string
                    company_attributes:
                      type: object
                      properties:
                        name:
                          type: string
                        timezone:
                          type: string
                        start_day:
                          type: string
                  required:
                  - name
                  - email
                  - title
                  - password
                  - password_confirmation
                  - phone_number
                device_id:
                  type: string
              required:
              - user
              - device_id
    get:
      summary: Lists all users
      tags:
      - Users
      security:
      - bearerAuth: []
      parameters:
      - name: start_date
        in: query
        format: date
        required: false
        schema:
          type: string
      - name: end_date
        in: query
        format: date
        required: false
        schema:
          type: string
      responses:
        '200':
          description: users found
        '401':
          description: unauthorized
  "/users/{id}":
    get:
      summary: Retrieves a user
      tags:
      - Users
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: start_date
        in: query
        format: date
        required: false
        schema:
          type: string
      - name: end_date
        in: query
        format: date
        required: false
        schema:
          type: string
      responses:
        '200':
          description: user found
        '404':
          description: user not found
        '401':
          description: unauthorized
    put:
      summary: Updates a user
      tags:
      - Users
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: user updated
        '404':
          description: user not found
        '422':
          description: invalid request
        '401':
          description: unauthorized
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                title:
                  type: string
                phone_number:
                  type: string
    delete:
      summary: Deletes a user
      tags:
      - Users
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: user deleted
        '404':
          description: user not found
        '401':
          description: unauthorized
  "/vacations":
    get:
      summary: Retrieves all vacations
      tags:
      - Vacations
      security:
      - bearerAuth: []
      parameters:
      - name: start_date
        in: query
        format: date
        schema:
          type: string
      - name: end_date
        in: query
        format: date
        schema:
          type: string
      responses:
        '200':
          description: vacations found
    post:
      summary: Creates a vacation
      tags:
      - Vacations
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '201':
          description: vacation created
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                start_date:
                  type: string
                  format: date
                end_date:
                  type: string
                  format: date
                user_id:
                  type: integer
              required:
              - start_date
              - end_date
              - user_id
  "/vacations/{id}":
    get:
      summary: Retrieves a vacation
      tags:
      - Vacations
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: vacation found
        '404':
          description: vacation not found
    patch:
      summary: Updates a vacation
      tags:
      - Vacations
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: vacation updated
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                start_date:
                  type: string
                  format: date
                end_date:
                  type: string
                  format: date
              required:
              - start_date
              - end_date
    delete:
      summary: Deletes a vacation
      tags:
      - Vacations
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      security:
      - bearerAuth: []
      responses:
        '204':
          description: vacation deleted
        '404':
          description: vacation not found
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: localhost:3000
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
